events { }

http {
    upstream auth_service {
        server auth_service:8000;
    }
    upstream meeting_service {
        server meeting_service:8000;
    }
    upstream recording_service {
        server recording_service:8000;
    }
    upstream transcription_service {
        server transcription_service:8000;
    }
    upstream ai_service {
        server ai_service:8000;
    }
    upstream media_service {
        server media_service:8000;
    }

    server {
        listen 80;

        # Route /api/auth/* → auth_service
        location /api/auth/ {
            proxy_pass         http://auth_service;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        # Route /api/meeting/* → meeting_service
        location /api/meeting/ {
            proxy_pass http://meeting_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /api/recordings/* → recording_service
        location /api/recordings/ {
            proxy_pass http://recording_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /api/transcriptions/* → transcription_service
        location /api/transcriptions/ {
            proxy_pass http://transcription_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /api/ai/* → ai_service
        location /api/ai/ {
            proxy_pass http://ai_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /api/media/* → media_service
        location /api/media/ {
            proxy_pass http://media_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Optionally serve static files directly (if using a single shared static folder)
        location /static/ {
            alias /static/;
        }
        location /media/ {
            alias /media/;
        }
    }
}
